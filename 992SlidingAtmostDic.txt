class Solution:
    def subarraysWithKDistinct(self, nums: List[int], k: int) -> int:
        def atMostK(nums,k):
            n=len(nums)
            l=0
            ans=0
            dic={}
            for r in range(n):
                val=nums[r]
                if val in dic:
                    dic[val]+=1
                else:
                    dic[val]=1
                while len(dic)>k:
                    lval=nums[l]
                    dic[lval]-=1
                    if dic[lval]==0:
                        dic.pop(lval)
                    l+=1
                ans+=r-l+1
            return ans
        return (atMostK(nums,k)-(atMostK(nums,k-1)))
        